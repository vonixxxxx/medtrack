{"level":"info","message":"Starting daily medication reminders","service":"reminder-service","timestamp":"2025-09-18T05:00:00.124Z"}
{"error":"\nInvalid `prisma.medication.findMany()` invocation in\n/Users/AlexanderSokol/medtrack/backend/src/services/reminderService.js:27:57\n\n  24 this.logger.info('Starting daily medication reminders');\n  25 \n  26 // Get all active medications with their users\n→ 27 const activeMedications = await prisma.medication.findMany({\n       where: {\n         isActive: true,\n         startDate: {\n           lte: new Date(\"2025-09-18T05:00:00.208Z\")\n         },\n         OR: [\n           {\n             endDate: null\n           },\n           {\n             endDate: {\n               gte: new Date(\"2025-09-18T05:00:00.209Z\")\n             }\n           }\n         ]\n       },\n       include: {\n         user: {\n           select: {\n             id: true,\n             email: true,\n             firstName: true,\n             lastName: true,\n             phoneNumber: true,\n             emailNotifications: true,\n             ~~~~~~~~~~~~~~~~~~\n             smsNotifications: true,\n     ?       password?: true,\n     ?       dateOfBirth?: true,\n     ?       gender?: true,\n     ?       ethnicity?: true,\n     ?       address?: true,\n     ?       postalCode?: true,\n     ?       isEmailVerified?: true,\n     ?       emailVerificationToken?: true,\n     ?       passwordResetToken?: true,\n     ?       passwordResetExpires?: true,\n     ?       twoFactorSecret?: true,\n     ?       twoFactorEnabled?: true,\n     ?       lastLogin?: true,\n     ?       loginAttempts?: true,\n     ?       lockedUntil?: true,\n     ?       height?: true,\n     ?       weight?: true,\n     ?       waistCircumference?: true,\n     ?       hipCircumference?: true,\n     ?       neckCircumference?: true,\n     ?       bloodPressure?: true,\n     ?       bmi?: true,\n     ?       whr?: true,\n     ?       whtr?: true,\n     ?       bri?: true,\n     ?       gdprConsent?: true,\n     ?       gdprConsentDate?: true,\n     ?       dataProcessingConsent?: true,\n     ?       researchConsent?: true,\n     ?       marketingConsent?: true,\n     ?       createdAt?: true,\n     ?       updatedAt?: true,\n     ?       medications?: true,\n     ?       medicationCycles?: true,\n     ?       medicationLogs?: true,\n     ?       metrics?: true,\n     ?       metricRequirements?: true,\n     ?       notifications?: true,\n     ?       screeningResults?: true,\n     ?       userMedicationCycles?: true,\n     ?       healthProfile?: true,\n     ?       _count?: true\n           }\n         }\n       }\n     })\n\nUnknown field `emailNotifications` for select statement on model `User`. Available options are marked with ?.","level":"error","message":"Error in daily medication reminders","service":"reminder-service","stack":"PrismaClientValidationError: \nInvalid `prisma.medication.findMany()` invocation in\n/Users/AlexanderSokol/medtrack/backend/src/services/reminderService.js:27:57\n\n  24 this.logger.info('Starting daily medication reminders');\n  25 \n  26 // Get all active medications with their users\n→ 27 const activeMedications = await prisma.medication.findMany({\n       where: {\n         isActive: true,\n         startDate: {\n           lte: new Date(\"2025-09-18T05:00:00.208Z\")\n         },\n         OR: [\n           {\n             endDate: null\n           },\n           {\n             endDate: {\n               gte: new Date(\"2025-09-18T05:00:00.209Z\")\n             }\n           }\n         ]\n       },\n       include: {\n         user: {\n           select: {\n             id: true,\n             email: true,\n             firstName: true,\n             lastName: true,\n             phoneNumber: true,\n             emailNotifications: true,\n             ~~~~~~~~~~~~~~~~~~\n             smsNotifications: true,\n     ?       password?: true,\n     ?       dateOfBirth?: true,\n     ?       gender?: true,\n     ?       ethnicity?: true,\n     ?       address?: true,\n     ?       postalCode?: true,\n     ?       isEmailVerified?: true,\n     ?       emailVerificationToken?: true,\n     ?       passwordResetToken?: true,\n     ?       passwordResetExpires?: true,\n     ?       twoFactorSecret?: true,\n     ?       twoFactorEnabled?: true,\n     ?       lastLogin?: true,\n     ?       loginAttempts?: true,\n     ?       lockedUntil?: true,\n     ?       height?: true,\n     ?       weight?: true,\n     ?       waistCircumference?: true,\n     ?       hipCircumference?: true,\n     ?       neckCircumference?: true,\n     ?       bloodPressure?: true,\n     ?       bmi?: true,\n     ?       whr?: true,\n     ?       whtr?: true,\n     ?       bri?: true,\n     ?       gdprConsent?: true,\n     ?       gdprConsentDate?: true,\n     ?       dataProcessingConsent?: true,\n     ?       researchConsent?: true,\n     ?       marketingConsent?: true,\n     ?       createdAt?: true,\n     ?       updatedAt?: true,\n     ?       medications?: true,\n     ?       medicationCycles?: true,\n     ?       medicationLogs?: true,\n     ?       metrics?: true,\n     ?       metricRequirements?: true,\n     ?       notifications?: true,\n     ?       screeningResults?: true,\n     ?       userMedicationCycles?: true,\n     ?       healthProfile?: true,\n     ?       _count?: true\n           }\n         }\n       }\n     })\n\nUnknown field `emailNotifications` for select statement on model `User`. Available options are marked with ?.\n    at wn (/Users/AlexanderSokol/medtrack/backend/node_modules/@prisma/client/runtime/library.js:29:1363)\n    at $n.handleRequestError (/Users/AlexanderSokol/medtrack/backend/node_modules/@prisma/client/runtime/library.js:121:6958)\n    at $n.handleAndLogRequestError (/Users/AlexanderSokol/medtrack/backend/node_modules/@prisma/client/runtime/library.js:121:6623)\n    at $n.request (/Users/AlexanderSokol/medtrack/backend/node_modules/@prisma/client/runtime/library.js:121:6307)\n    at async l (/Users/AlexanderSokol/medtrack/backend/node_modules/@prisma/client/runtime/library.js:130:9633)\n    at async ReminderService.sendDailyReminders (/Users/AlexanderSokol/medtrack/backend/src/services/reminderService.js:27:33)\n    at async Task._execution (/Users/AlexanderSokol/medtrack/backend/src/index.js:264:5)","timestamp":"2025-09-18T05:00:00.519Z"}
{"level":"info","message":"Starting daily medication reminders","timestamp":"2025-10-11T05:00:00.412Z"}
{"clientVersion":"5.22.0","level":"error","message":"Error sending daily reminders: \nInvalid `prisma.medication.findMany()` invocation in\n/Users/AlexanderSokol/medtrack/backend/src/services/reminderService.js:30:57\n\n  27 this.logger.info('Starting daily medication reminders');\n  28 \n  29 // Get all active medications with their users\n→ 30 const activeMedications = await prisma.medication.findMany({\n       where: {\n         isActive: true,\n         startDate: {\n           lte: new Date(\"2025-10-11T05:00:00.458Z\")\n         },\n         OR: [\n           {\n             endDate: null\n           },\n           {\n             endDate: {\n               gte: new Date(\"2025-10-11T05:00:00.459Z\")\n             }\n           }\n         ]\n       },\n       include: {\n         user: {\n           select: {\n             id: true,\n             email: true,\n             firstName: true,\n             ~~~~~~~~~\n             lastName: true,\n             phoneNumber: true,\n             emailNotifications: true,\n             smsNotifications: true,\n     ?       password?: true,\n     ?       name?: true,\n     ?       createdAt?: true,\n     ?       updatedAt?: true,\n     ?       medications?: true,\n     ?       medicationCycles?: true,\n     ?       medicationLogs?: true,\n     ?       metrics?: true,\n     ?       notifications?: true,\n     ?       screeningResults?: true,\n     ?       user_medication_cycles?: true,\n     ?       _count?: true\n           }\n         }\n       }\n     })\n\nUnknown field `firstName` for select statement on model `User`. Available options are marked with ?.","name":"PrismaClientValidationError","stack":"PrismaClientValidationError: \nInvalid `prisma.medication.findMany()` invocation in\n/Users/AlexanderSokol/medtrack/backend/src/services/reminderService.js:30:57\n\n  27 this.logger.info('Starting daily medication reminders');\n  28 \n  29 // Get all active medications with their users\n→ 30 const activeMedications = await prisma.medication.findMany({\n       where: {\n         isActive: true,\n         startDate: {\n           lte: new Date(\"2025-10-11T05:00:00.458Z\")\n         },\n         OR: [\n           {\n             endDate: null\n           },\n           {\n             endDate: {\n               gte: new Date(\"2025-10-11T05:00:00.459Z\")\n             }\n           }\n         ]\n       },\n       include: {\n         user: {\n           select: {\n             id: true,\n             email: true,\n             firstName: true,\n             ~~~~~~~~~\n             lastName: true,\n             phoneNumber: true,\n             emailNotifications: true,\n             smsNotifications: true,\n     ?       password?: true,\n     ?       name?: true,\n     ?       createdAt?: true,\n     ?       updatedAt?: true,\n     ?       medications?: true,\n     ?       medicationCycles?: true,\n     ?       medicationLogs?: true,\n     ?       metrics?: true,\n     ?       notifications?: true,\n     ?       screeningResults?: true,\n     ?       user_medication_cycles?: true,\n     ?       _count?: true\n           }\n         }\n       }\n     })\n\nUnknown field `firstName` for select statement on model `User`. Available options are marked with ?.\n    at wn (/Users/AlexanderSokol/medtrack/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:29:1363)\n    at $n.handleRequestError (/Users/AlexanderSokol/medtrack/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:6958)\n    at $n.handleAndLogRequestError (/Users/AlexanderSokol/medtrack/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:6623)\n    at $n.request (/Users/AlexanderSokol/medtrack/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:6307)\n    at async l (/Users/AlexanderSokol/medtrack/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:130:9633)\n    at async ReminderService.sendDailyReminders (/Users/AlexanderSokol/medtrack/backend/src/services/reminderService.js:30:33)\n    at async Task._execution (/Users/AlexanderSokol/medtrack/backend/src/index.js:266:5)","timestamp":"2025-10-11T05:00:00.655Z"}
{"level":"info","message":"Starting daily medication reminders","timestamp":"2025-10-12T05:00:00.308Z"}
{"clientVersion":"5.22.0","level":"error","message":"Error sending daily reminders: \nInvalid `prisma.medication.findMany()` invocation in\n/Users/AlexanderSokol/medtrack/backend/src/services/reminderService.js:30:57\n\n  27 this.logger.info('Starting daily medication reminders');\n  28 \n  29 // Get all active medications with their users\n→ 30 const activeMedications = await prisma.medication.findMany({\n       where: {\n         isActive: true,\n         startDate: {\n           lte: new Date(\"2025-10-12T05:00:00.339Z\")\n         },\n         OR: [\n           {\n             endDate: null\n           },\n           {\n             endDate: {\n               gte: new Date(\"2025-10-12T05:00:00.339Z\")\n             }\n           }\n         ]\n       },\n       include: {\n         user: {\n           select: {\n             id: true,\n             email: true,\n             firstName: true,\n             ~~~~~~~~~\n             lastName: true,\n             phoneNumber: true,\n             emailNotifications: true,\n             smsNotifications: true,\n     ?       password?: true,\n     ?       name?: true,\n     ?       createdAt?: true,\n     ?       updatedAt?: true,\n     ?       medications?: true,\n     ?       medicationCycles?: true,\n     ?       medicationLogs?: true,\n     ?       metrics?: true,\n     ?       notifications?: true,\n     ?       screeningResults?: true,\n     ?       user_medication_cycles?: true,\n     ?       _count?: true\n           }\n         }\n       }\n     })\n\nUnknown field `firstName` for select statement on model `User`. Available options are marked with ?.","name":"PrismaClientValidationError","stack":"PrismaClientValidationError: \nInvalid `prisma.medication.findMany()` invocation in\n/Users/AlexanderSokol/medtrack/backend/src/services/reminderService.js:30:57\n\n  27 this.logger.info('Starting daily medication reminders');\n  28 \n  29 // Get all active medications with their users\n→ 30 const activeMedications = await prisma.medication.findMany({\n       where: {\n         isActive: true,\n         startDate: {\n           lte: new Date(\"2025-10-12T05:00:00.339Z\")\n         },\n         OR: [\n           {\n             endDate: null\n           },\n           {\n             endDate: {\n               gte: new Date(\"2025-10-12T05:00:00.339Z\")\n             }\n           }\n         ]\n       },\n       include: {\n         user: {\n           select: {\n             id: true,\n             email: true,\n             firstName: true,\n             ~~~~~~~~~\n             lastName: true,\n             phoneNumber: true,\n             emailNotifications: true,\n             smsNotifications: true,\n     ?       password?: true,\n     ?       name?: true,\n     ?       createdAt?: true,\n     ?       updatedAt?: true,\n     ?       medications?: true,\n     ?       medicationCycles?: true,\n     ?       medicationLogs?: true,\n     ?       metrics?: true,\n     ?       notifications?: true,\n     ?       screeningResults?: true,\n     ?       user_medication_cycles?: true,\n     ?       _count?: true\n           }\n         }\n       }\n     })\n\nUnknown field `firstName` for select statement on model `User`. Available options are marked with ?.\n    at wn (/Users/AlexanderSokol/medtrack/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:29:1363)\n    at $n.handleRequestError (/Users/AlexanderSokol/medtrack/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:6958)\n    at $n.handleAndLogRequestError (/Users/AlexanderSokol/medtrack/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:6623)\n    at $n.request (/Users/AlexanderSokol/medtrack/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:121:6307)\n    at async l (/Users/AlexanderSokol/medtrack/node_modules/.pnpm/@prisma+client@5.22.0_prisma@5.22.0/node_modules/@prisma/client/runtime/library.js:130:9633)\n    at async ReminderService.sendDailyReminders (/Users/AlexanderSokol/medtrack/backend/src/services/reminderService.js:30:33)\n    at async Task._execution (/Users/AlexanderSokol/medtrack/backend/src/index.js:266:5)","timestamp":"2025-10-12T05:00:00.487Z"}
